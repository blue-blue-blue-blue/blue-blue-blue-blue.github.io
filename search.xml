<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>problems-of-software</title>
      <link href="/2022/10/01/problems-of-software/"/>
      <url>/2022/10/01/problems-of-software/</url>
      
        <content type="html"><![CDATA[<blockquote><p>下载软件后，弹出下面样式的窗口不要急着关闭，让它跑一会</p><img src="https://blue-blue-blue-blue.github.io/img/d2.png" width ="60%"></blockquote><blockquote><p>Q:安装gmpy2时，显示</p><img src="https://blue-blue-blue-blue.github.io/img/d1.png" width ="60%"><p>A:python版本有3.x和2.x,将pip换成pip3再进行下载就不会有黄色字样的提醒；</p><p>更新了一下wheel,发现还是有相同的红色字样的报错（is not a supported wheel on this platform），其实是版本下载错了。运行<strong>pip debug –verbose</strong>，查看支持的版本，换成win_amd64的版本就行了</p></blockquote><blockquote><p>Q:下载nodejs后，输入命令npm -v没有回显，直接进入下一行</p><p>A:在C盘(这里一定是C盘，假如你把nodejs下到D盘，那也是找C盘) &#x3D;&gt; 用户（Users）&#x3D;&gt; Administrator（比如我的Administrator就是v587）&#x3D;&gt;删除.npmrc文件就可以了。（注意是.npmrc不是npmrc）</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CRYPTO-BUUCTF</title>
      <link href="/2022/09/27/CRYPTO-BUUCTF/"/>
      <url>/2022/09/27/CRYPTO-BUUCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h2><p>md5解码即得flag</p><img src="https://blue-blue-blue-blue.github.io/img/b1.png" width ="60%"><h2 id="一眼就解密"><a href="#一眼就解密" class="headerlink" title="一眼就解密"></a>一眼就解密</h2><p>base64解码</p><img src="https://blue-blue-blue-blue.github.io/img/b2.png" width ="60%"> <h2 id="Url编码"><a href="#Url编码" class="headerlink" title="Url编码"></a>Url编码</h2><p>url解码</p><img src="https://blue-blue-blue-blue.github.io/img/b3.png" width ="60%"> <h2 id="看我回旋踢1"><a href="#看我回旋踢1" class="headerlink" title="看我回旋踢1"></a>看我回旋踢1</h2><p>凯撒解码</p><img src="https://blue-blue-blue-blue.github.io/img/b4.png" width ="60%"> <h2 id="摩丝"><a href="#摩丝" class="headerlink" title="摩丝"></a>摩丝</h2><p>摩斯电码组成</p><img src="https://blue-blue-blue-blue.github.io/img/b5.png" width ="60%"> <h2 id="password"><a href="#password" class="headerlink" title="password"></a>password</h2><p>除了姓名和出生日期什么都没有，提示key里的×有10个，姓名缩写和出生日的字符加起来刚好十个，答案为flag{zs19900315}</p><img src="https://blue-blue-blue-blue.github.io/img/b6.png" width ="60%">  <h2 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h2><p>凯撒离不开偏移量,afZ_对应flag,按照ASCII表,ASCII值的差分别为5,6,7,8,将密文字符的偏移量依次加1即可(不能用解码程序,只能按ASCII表依次对照)</p><img src="https://blue-blue-blue-blue.github.io/img/b7.png" width ="60%"> <img src="https://blue-blue-blue-blue.github.io/img/ASCII.jpg" width ="60%">  <h2 id="Quoted-printable1"><a href="#Quoted-printable1" class="headerlink" title="Quoted-printable1"></a>Quoted-printable1</h2><p>Quoted-printable解码后用flag{}包裹</p><img src="https://blue-blue-blue-blue.github.io/img/b8.png" width ="60%">  <h2 id="Rabbit1"><a href="#Rabbit1" class="headerlink" title="Rabbit1"></a>Rabbit1</h2><p>Rabbit解密</p><img src="https://blue-blue-blue-blue.github.io/img/b9.png" width ="60%">  <h2 id="篱笆墙的影子1"><a href="#篱笆墙的影子1" class="headerlink" title="篱笆墙的影子1"></a>篱笆墙的影子1</h2><p>栅栏密码解密</p><img src="https://blue-blue-blue-blue.github.io/img/b10.png" width ="60%">  <h2 id="RSA1"><a href="#RSA1" class="headerlink" title="RSA1"></a>RSA1</h2><p>用RSA-Tool 2 by tE!程序进行解码，number Base调为10，e的数据要转为16进制再输入，输入p、q(或输入r、d，点击Factor N)，点击Calc.D，所得的D就是明文</p><img src="https://blue-blue-blue-blue.github.io/img/b11.png" width ="60%"><h2 id="消失的MD5-1"><a href="#消失的MD5-1" class="headerlink" title="消失的MD5   1"></a>消失的MD5   1</h2><p>最后一行加个括号，运行一下python脚本即可（终端运行python，输入python2  加一个空格  加文件地址（或者直接将文件拖入到终端界面））</p><img src="https://blue-blue-blue-blue.github.io/img/b12.jpg" width ="60%"><h2 id="Alice与Bob-1"><a href="#Alice与Bob-1" class="headerlink" title="Alice与Bob 1"></a>Alice与Bob 1</h2><p>用RSA-Tool 2 by tE分解素数，合成后MD5加密</p><img src="https://blue-blue-blue-blue.github.io/img/b13.png" width ="60%"><h2 id="大帝的秘密武器"><a href="#大帝的秘密武器" class="headerlink" title="大帝的秘密武器"></a>大帝的秘密武器</h2><p>将附件加上后缀.zip,由题目得此题与凯撒密码相关，将题目中的FRPHEVGL进行凯撒解码后，发现当偏移量为13的时候得到的明文为单词SECURITY，将密文以偏移量为13进行解码即可 </p><h2 id="rsarsa"><a href="#rsarsa" class="headerlink" title="rsarsa"></a>rsarsa</h2><p>用RSA-Tool 2 by tE!程序进行解密,运行pow（c,d,n）即所得明文。（复制的时候记得要复制完整，RSA-Tool 2 by tE!只显示当前三行但可能不止三行，用鼠标往下翻一翻，确保复制完整）</p><img src="https://blue-blue-blue-blue.github.io/img/b14.jpg" width ="60%"><h2 id="windows系统密码"><a href="#windows系统密码" class="headerlink" title="windows系统密码"></a>windows系统密码</h2><p>将ctf后的字符串ntlm解码一下</p><img src="https://blue-blue-blue-blue.github.io/img/b15.png" width ="60%"><h2 id="信息化时代的步伐"><a href="#信息化时代的步伐" class="headerlink" title="信息化时代的步伐"></a>信息化时代的步伐</h2><p>中文电码解码</p><img src="https://blue-blue-blue-blue.github.io/img/b17.png" width ="60%"><h2 id="凯撒？替换？呵呵-1"><a href="#凯撒？替换？呵呵-1" class="headerlink" title="凯撒？替换？呵呵!  1"></a>凯撒？替换？呵呵!  1</h2><p>强行爆破，用MTHJ&#x3D;flag条件得到替换出来的结果，最后删去空格即可</p><img src="https://blue-blue-blue-blue.github.io/img/b18.png" width ="60%"><h2 id="萌萌哒的八戒"><a href="#萌萌哒的八戒" class="headerlink" title="萌萌哒的八戒"></a>萌萌哒的八戒</h2><p>猪圈密码解码</p><img src="https://blue-blue-blue-blue.github.io/img/b19.png" width ="60%"><h2 id="传统知识-古典密码"><a href="#传统知识-古典密码" class="headerlink" title="传统知识+古典密码"></a>传统知识+古典密码</h2><p>一甲子是60年，对照60年甲子表，将其甲子表数值当成ASCII值，得到XZSDMFLZ，栅栏解密后凯撒解密，猜测SHUANGYU为答案</p><img src="https://blue-blue-blue-blue.github.io/img/b20.png" width ="60%"><h2 id="RSA1-1"><a href="#RSA1-1" class="headerlink" title="RSA1"></a>RSA1</h2><p>m &#x3D; (((mp-mq)* gmpy2.invert(q,p))%p)*q+mq得到字符串0x6e6f784354467b57333163306d335f37305f4368316e343730776e7d，以0x开头，为16进制，16进制转文本解码可得</p><img src="https://blue-blue-blue-blue.github.io/img/b21.png" width ="60%"><h2 id="权限获得第一步"><a href="#权限获得第一步" class="headerlink" title="权限获得第一步"></a>权限获得第一步</h2><p>猜测与NTLM相关，将最末尾的字符串NTML解密即可</p><img src="https://blue-blue-blue-blue.github.io/img/b22.png" width ="60%"><h2 id="old-fashion"><a href="#old-fashion" class="headerlink" title="old-fashion"></a>old-fashion</h2><p>观察文本，感觉最后一句像含有部分的flag,猜测将文本进行简单的处理会有所收获。用quipqiup进行爆破即可（将全部文本内容拿去爆，不要只拿最后一句）</p><img src="https://blue-blue-blue-blue.github.io/img/b23.png" width ="60%"><h2 id="世上无难事"><a href="#世上无难事" class="headerlink" title="世上无难事"></a>世上无难事</h2><p>用quipqiup进行爆破，再将大写字母转换成小写即可</p><img src="https://blue-blue-blue-blue.github.io/img/b24.png" width ="60%"><h2 id="RSA3"><a href="#RSA3" class="headerlink" title="RSA3"></a>RSA3</h2><p>解RSA后得到13040004482819947212936436796507286940525898188874967465457845309271472287032383337801279101，为十进制，将其转为十六进制后再16进制转文本即可（RSA解码后的数太大，在线的网站无法转换进制，于是借助了BigNum1.0软件）</p><img src="https://blue-blue-blue-blue.github.io/img/b25.png" width ="60%"><h2 id="RSA2"><a href="#RSA2" class="headerlink" title="RSA2"></a>RSA2</h2><p>运行脚本后，十进制转十六转文</p><h2 id="Unencode-1"><a href="#Unencode-1" class="headerlink" title="Unencode 1"></a>Unencode 1</h2><p>UUencode解码</p><img src="https://blue-blue-blue-blue.github.io/img/b26.png" width ="60%"><h2 id="Morse-1"><a href="#Morse-1" class="headerlink" title="Morse 1"></a>Morse 1</h2><p>摩斯电码解码后十六进制转文</p><h2 id="还原大师-1"><a href="#还原大师-1" class="headerlink" title="还原大师 1"></a>还原大师 1</h2><p>MD5爆破，运行脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="comment">#print hashlib.md5(s).hexdigest().upper()</span></span><br><span class="line">k = <span class="string">&#x27;TASC?O3RJMV?WDJKX?ZM&#x27;</span>                    <span class="comment">#要还原的明文</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">temp1 = k.replace(<span class="string">&#x27;?&#x27;</span>,<span class="built_in">str</span>(<span class="built_in">chr</span>(<span class="number">65</span>+i)),<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">temp2 = temp1.replace(<span class="string">&#x27;?&#x27;</span>,<span class="built_in">chr</span>(<span class="number">65</span>+j),<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">temp3 = temp2.replace(<span class="string">&#x27;?&#x27;</span>,<span class="built_in">chr</span>(<span class="number">65</span>+n),<span class="number">1</span>)</span><br><span class="line">s = hashlib.md5(temp3.encode(<span class="string">&#x27;utf8&#x27;</span>)).hexdigest().upper()<span class="comment">#注意大小写</span></span><br><span class="line"><span class="keyword">if</span> s[:<span class="number">4</span>] == <span class="string">&#x27;E903&#x27;</span>:    <span class="comment">#检查元素</span></span><br><span class="line"><span class="built_in">print</span> (s)       <span class="comment">#输出密文</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>crypto-key</title>
      <link href="/2022/09/27/crypto-key/"/>
      <url>/2022/09/27/crypto-key/</url>
      
        <content type="html"><![CDATA[<blockquote><p>注意提示(key)</p><p>终端运行python，输入python2  加一个空格  加文件地址（或者直接将文件拖入到终端界面）</p></blockquote><blockquote><p>解密网址</p><p><a href="https://cmd5.com/">MD5、ntlm</a>    <a href="https://www.iamwawa.cn/urldecode.html">MD5 、url、文本处理、摩斯电码</a>  <a href="https://wtool.com.cn/quoted.html">Quoted-printable</a> <a href="https://www.sojson.com/encrypt_rabbit.html">Rabbit</a> <a href="http://code.mcdvisa.com/">中文电码</a>  <a href="https://quipqiup.com/">quipqiup(强行爆破,替换)</a>   <a href="http://www.metools.info/code/c90.html#:~:text=%E7%8C%AA%E5%9C%88%E5%AF%86%E7%A0%81,%EF%BC%88%E4%BA%A6%E7%A7%B0%E6%9C%B1%E9%AB%98%E5%AF%86%E7%A0%81%E3%80%81%E5%85%B1%E6%B5%8E%E4%BC%9A%E6%9A%97%E5%8F%B7%E3%80%81%E5%85%B1%E6%B5%8E%E4%BC%9A%E5%AF%86%E7%A0%81%E6%88%96%E5%85%B1%E6%B5%8E%E4%BC%9A%E5%91%98%E5%AF%86%E7%A0%81%EF%BC%89%EF%BC%8C%E6%98%AF%E4%B8%80%E7%A7%8D%E4%BB%A5%E6%A0%BC%E5%AD%90%E4%B8%BA%E5%9F%BA%E7%A1%80%E7%9A%84%E7%AE%80%E5%8D%95%E6%9B%BF%E4%BB%A3%E5%BC%8F%E5%AF%86%E7%A0%81%EF%BC%8C%E6%9B%BE%E7%BB%8F%E6%98%AF%E7%BE%8E%E5%9B%BD%E5%86%85%E6%88%98%E6%97%B6%E7%9B%9F%E5%86%9B%E4%BD%BF%E7%94%A8%E7%9A%84%E5%AF%86%E7%A0%81%EF%BC%8C%E7%9B%AE%E5%89%8D%E4%BB%85%E5%9C%A8%E5%AF%86%E7%A0%81%E6%95%99%E5%AD%A6%E3%80%81%E5%90%84%E7%A7%8D%E7%AB%9E%E8%B5%9B%E4%B8%AD%E4%BD%BF%E7%94%A8%E3%80%82">猪圈密码</a>   <a href="https://www.qqxiuzi.cn/bianma/ascii.htm">ASCII编码转换</a></p><p><a href="https://ctf.bugku.com/tools">base、凯撒、栅栏、UUencode、XXencode、希尔、与佛论禅、ADFGX、核心价值观编码、Sojson、维吉尼亚、TripleDes(3DES)、Brainfuck&#x2F;OoK</a>  </p><p><a href="https://www.sojson.com/hexadecimal.html">16进制转文本</a> </p></blockquote><blockquote><p>脑洞</p><p>key{xxxxxx},x的个数代表字符的个数</p><p>六十年甲子表对应的数值视为与ASCII值相关</p></blockquote><blockquote><p>MD5 </p><p>组成：由数字和字母(全小写或者全大写)组成。</p><p>MD5爆破：已知字符串k：TASC?O3RJMV?WDJKX?ZM,问号部分是未知大写字母，这个字串的32位MD5码。但是我们获得它残缺不全，E903???4DAB????08?????51?80??8A?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="comment">#print hashlib.md5(s).hexdigest().upper()</span></span><br><span class="line">k = <span class="string">&#x27;TASC?O3RJMV?WDJKX?ZM&#x27;</span>                    <span class="comment">#要还原的明文</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">temp1 = k.replace(<span class="string">&#x27;?&#x27;</span>,<span class="built_in">str</span>(<span class="built_in">chr</span>(<span class="number">65</span>+i)),<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">temp2 = temp1.replace(<span class="string">&#x27;?&#x27;</span>,<span class="built_in">chr</span>(<span class="number">65</span>+j),<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">temp3 = temp2.replace(<span class="string">&#x27;?&#x27;</span>,<span class="built_in">chr</span>(<span class="number">65</span>+n),<span class="number">1</span>)</span><br><span class="line">s = hashlib.md5(temp3.encode(<span class="string">&#x27;utf8&#x27;</span>)).hexdigest().upper()<span class="comment">#注意大小写</span></span><br><span class="line"><span class="keyword">if</span> s[:<span class="number">4</span>] == <span class="string">&#x27;E903&#x27;</span>:    <span class="comment">#检查元素,用残缺MD5第一个？前的字符串</span></span><br><span class="line"><span class="built_in">print</span> (s)       <span class="comment">#输出密文</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>eg:04ad5938eaf0efb&#x2F;327a6c4304ad5938eaf0efb6cc3e53dc(flag)，c3088560732a5ac1&#x2F;f95b70fdc3088560732a5ac135644506(“{“)，8e05c9709e5dcaed&#x2F;cbb184dd8e05c9709e5dcaedaa0495cf(“}”)</p></blockquote><blockquote><p>base</p><blockquote><p>base64 </p><p>组成：含大小写字母、数字、<strong>末尾可能有1、2个“&#x3D;”</strong></p><p>用于url的base64编码：结尾填充“&#x3D;”，并将标准Base64中的“+”和“&#x2F;”分别改成了“-”和“_”</p><p>用于正则表达式的改进Base64变种，它将“+”和“&#x2F;”改成了“!”和“-”</p><p>Base64要求把每三个8Bit的字节转换为四个6Bit的字节（3<em>8 &#x3D; 4</em>6 &#x3D; 24），然后把6Bit再添两位高位0，组成四个8Bit的字节，也就是说，转换后的字符串理论上将要比原来的长1&#x2F;3。(不计填充末尾的等号约为1&#x2F;3) </p><p>eg:<strong>ZmxhZw</strong>&#x3D;&#x3D;（flag），ew(“{“)，fQ(“}”)</p></blockquote></blockquote><blockquote><p>url</p><p>组成：由%加数字、字母组成。</p><p>RFC3986 协议规定 URL 只允许包含以下四种字符：<br>1、英文字母（a-zA-Z）<br>2、数字（0-9）<br>3、-_.~ 4个特殊字符<br>4、所有保留字符，RFC3986 中指定了以下字符为保留字符（英文字符）： ! * ‘ ( ) ; : @ &amp; &#x3D; + $ , &#x2F; ? # [ ]</p><p>eg:%7B(“{“),%7D(“}”),%66%6c%61%67**%7b**%61%6e%64%20%31%3d%31**%7d** </p></blockquote><blockquote><p>古典密码</p><blockquote><p>凯撒</p><p>组成：解码要知道<strong>偏移量</strong>，一定含有字母 </p><p>若试不出偏移量，可尝试quipqiup</p><p>eg:synt{5pq1004q-86n5-46q8-o720-oro5on0417r1}</p></blockquote><blockquote><p>摩斯电码</p><p>组成：解码需要知道<strong>分隔、长、短</strong>（常为空格、-、 .），密文由两种符号和分隔组成</p><p>eg:..-. .-.. .- –. —-.–(flag{)</p></blockquote><blockquote><p>栅栏密码</p><p>所谓栅栏密码，就是把要加密的明文分成N个一组，然后把每组的第1个字连起来，形成一段无规律的话。 不过栅栏密码本身有一个潜规则，就是组成栅栏的字母一般不会太多。（一般不超过30个，也就是一、两句话）</p><p>组成:栏数(可点击网址枚举解密),由明文字符打乱顺序组成</p></blockquote></blockquote><blockquote><p>Quoted-printable</p><p>Quoted-printable可译为“可打印字符引用编码”，编码常用在电子邮件中，如：Content-Tra […]</p><p>组成:密文由&#x3D;加 字母或数学 加 字母或者数字</p><p>任何一个8位的字节值可编码为3个字符：一个等号”&#x3D;”后跟随两个十六进制数字(0–9或A–F)表示该字节的数值</p><p>eg:&#x3D;E9&#x3D;82&#x3D;A3&#x3D;E4&#x3D;BD&#x3D;A0&#x3D;E4&#x3D;B9&#x3D;9F&#x3D;E5&#x3D;BE&#x3D;88&#x3D;E6&#x3D;A3&#x3D;92&#x3D;E5&#x3D;93&#x3D;A6</p></blockquote><blockquote><p>Rabbit</p><p>Rabbit加密是什么 Rabbit 是一种高速流密码，于 2003 年在 FSE 研讨会上首次提出。 Rabbit 使用一个 128 位密钥和一个 64 位初始化向量。 该加密算法的核心组件是一个位流生成器，该流生成器每次迭代都会加密 128 个消息位。</p><p>组成:字母,&#x3D;,+,&#x2F;     以U2FsdGVkX1开头;可能以&#x3D;结尾</p><p>eg:U2FsdGVkX1&#x2F;+ydnDPowGbjjJXhZxm2MP2AgI </p></blockquote><blockquote><p>RSA</p><img src="https://blue-blue-blue-blue.github.io/img/b16.png" width ="60%"><p>n&#x3D;p * q;    m&#x3D;pow（c,d,n);         I &#x3D; gmpy2.invert(q,p);        mp &#x3D; pow(c,dp,p);           mq &#x3D; pow(c,dq,q) ;           m &#x3D; (((mp-mq)* I)%p)*q+mq</p><p>组成：数字，p、q为素数</p><p>已知p,q,e或者e,r,d:使用RSA-Tool 2 by tE!（number Base调为10，e的数据要转为16进制再输入，输入p、q(或输入r、d，点击Factor N)，点击Calc.D，取D即可）</p><p>已知c,d,n,则m（明文）&#x3D;pow（c,d,n）</p><p>已知p、q、dp、dq、c则</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">p = </span><br><span class="line">q = </span><br><span class="line">dp = </span><br><span class="line">dq = </span><br><span class="line">c = </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">I = gmpy2.invert(q,p)</span><br><span class="line">mp = <span class="built_in">pow</span>(c,dp,p)</span><br><span class="line">mq = <span class="built_in">pow</span>(c,dq,q)               <span class="comment">#求幂取模运算</span></span><br><span class="line"></span><br><span class="line">m = (((mp-mq)*I)%p)*q+mq       <span class="comment">#求明文公式</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(m))          <span class="comment">#转为十六进制</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>已知n,c1,c2,e1,e2则</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"><span class="comment"># 欧几里得算法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">egcd</span>(<span class="params">a, b</span>):</span><br><span class="line">  <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    g, y, x = egcd(b % a, a)</span><br><span class="line">    <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">  n = </span><br><span class="line">  c1 = </span><br><span class="line">  c2 = </span><br><span class="line">  e1 = </span><br><span class="line">  e2 = </span><br><span class="line">  s = egcd(e1, e2)</span><br><span class="line">  s1 = s[<span class="number">1</span>]</span><br><span class="line">  s2 = s[<span class="number">2</span>]</span><br><span class="line">  <span class="comment"># 求模反元素</span></span><br><span class="line">  <span class="keyword">if</span> s1&lt;<span class="number">0</span>:</span><br><span class="line">    s1 = - s1</span><br><span class="line">    c1 = invert(c1, n)</span><br><span class="line">  <span class="keyword">elif</span> s2&lt;<span class="number">0</span>:</span><br><span class="line">    s2 = - s2</span><br><span class="line">    c2 = invert(c2, n)</span><br><span class="line"></span><br><span class="line">  m = <span class="built_in">pow</span>(c1,s1,n)*<span class="built_in">pow</span>(c2,s2,n) % n</span><br><span class="line">  <span class="built_in">print</span>(m)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>已知e,n,dp,c</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2 <span class="keyword">as</span> gp</span><br><span class="line"></span><br><span class="line">e = </span><br><span class="line">n = </span><br><span class="line">dp = </span><br><span class="line"></span><br><span class="line">c = </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, e):  <span class="comment"># 在范围(1,e)之间进行遍历</span></span><br><span class="line">    <span class="keyword">if</span> (dp * e - <span class="number">1</span>) % i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> n % (((dp * e - <span class="number">1</span>) // i) + <span class="number">1</span>) == <span class="number">0</span>:  <span class="comment"># 存在p，使得n能被p整除</span></span><br><span class="line">            p = ((dp * e - <span class="number">1</span>) // i) + <span class="number">1</span></span><br><span class="line">            q = n // (((dp * e - <span class="number">1</span>) // i) + <span class="number">1</span>)</span><br><span class="line">            phi = (q - <span class="number">1</span>) * (p - <span class="number">1</span>)  <span class="comment"># 欧拉定理</span></span><br><span class="line">            d = gp.invert(e, phi)  <span class="comment"># 求模逆</span></span><br><span class="line">            m = <span class="built_in">pow</span>(c, d, n)  <span class="comment"># 快速求幂取模运算</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(m)  <span class="comment"># 10进制明文</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(m)[<span class="number">2</span>:])  <span class="comment"># 16进制明文</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytes</span>.fromhex(<span class="built_in">hex</span>(m)[<span class="number">2</span>:]))  <span class="comment"># 16进制转文本</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>ntlm</p><p>NT LAN Manager（NTLM）哈希是 Windows 系统认可的另一种算法，用于替代古老的 LM-Hash</p><p>组成：数字和字母，与Windows相关（Administrator:xxxxxx）</p><p>NTLM Hash 生成原理：</p><ol><li>先将用户密码转换为十六进制格式。</li><li>将十六进制格式的密码进行 Unicode 编码。</li><li>使用 MD4 摘要算法对 Unicode 编码数据进行 Hash 计算</li></ol></blockquote><blockquote><p>中文电码</p><p>中文电码表采用了四位阿拉伯数字作代号，简称“四码电报”，从0001到9999按四位数顺序排列</p><p>组成：4的倍数个数字</p></blockquote><blockquote><p>quipqiup</p><p>quipqiup是Edwin Olson的快速自动密码求解器。它可以解决报纸上经常出现的简单替代密码，包括诸如密码窃听器（保留单词边界）之类的难题和爱国主义者（如密码迷）之类的难题。</p><p>组成：字符串，已知部分密文对应的明文或感觉简单处理（如调换字符顺序,偏移量规律变化）可得到东西</p></blockquote><blockquote><p>猪圈密码</p><p>亦称朱高密码、共济会暗号、共济会密码或共济会员密码，是一种以格子为基础的简单替代式密码。</p><img src="https://blue-blue-blue-blue.github.io/img/zhujuan.png" width ="60%"> </blockquote><blockquote><p>UUencode</p><p>是将二进制文件转换为文本文件的过程，转换后的文件可以通过纯文本e-mail进行传输，在接收方对该文件进行uudecode，即将其转换为初始的二进制文件。</p><p>组成：字母，数字，特殊符号（&lt;  .  $  ]  ,  #）</p><p>eg:89FQA9WMD&lt;V1A&lt;V1S83DY.#&lt;W3$Q,2TM]</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>web key</title>
      <link href="/2022/09/21/web-key/"/>
      <url>/2022/09/21/web-key/</url>
      
        <content type="html"><![CDATA[<blockquote><p>万能密码</p><p>以 x’ or’ 1 为例，当输入密码后，sql语句变为SELECT * FROM admin WHERE Username&#x3D; ‘用户名’ AND password&#x3D;’ <u>x’ or’  1</u> ‘    由于单引号的插入，且优先级not&gt;and&gt;or，语句变为<u>……AND password&#x3D;’x’</u>   or   <u>‘1’</u>   ,or后的语句恒为真,整条语句为真。  </p><p>同理，用户名输入1’ or 1 or ‘1’&#x3D;’1，语句…<u>Username&#x3D;’  1′</u> or <u>1</u> or <u>‘1’&#x3D;’1’</u> AND…… ,整条语句为真。   </p><p>（疑问：以buuctf  EasySQL1为例，用户名输1’ or ’1或者1’ or ‘1’&#x3D;’1显示错误）  </p><p>（解答：and的优先级比or高，0 or 1 and 0 等于 0 or 0 等于0 ）</p></blockquote><blockquote><p>注释</p><p>注释里有可能会有提示，如源码注释标有source.php,则需在url后加source.php进行查看</p></blockquote><blockquote><p>php  函数</p><blockquote><p>isset函数</p><p>如果指定变量存在且不为 NULL，则返回 TRUE，否则返回 FALSE。</p><p>如果一次传入多个参数，那么 isset() 只有在全部参数都被设置时返回 TRUE，计算过程从左至右，中途遇到没有设置的变量时就会立即停止。  </p></blockquote><blockquote><p>urldecode()函数</p><p>urldecode() 解码 URL 字符串函数。</p></blockquote><blockquote><p>substr函数  </p><p>SUBSTR() 函数从字符串中提取子字符串（从任意位置开始）。</p><p>语法：SUBSTR(<em>string</em>, <em>start</em>, <em>length</em>)  或者 SUBSTR(<em>string</em> FROM <em>start</em> FOR <em>length</em>)</p><p>length要提取的字符数。 如果省略，将返回整个字符串（从 <em>start</em> 位置开始）  </p></blockquote><blockquote><p>strpos函数</p><p>strpos() 函数查找字符串在另一字符串中第一次出现的位置。</p><p>语法：strpos(string,find,start)</p><p>stripos()- 查找字符串在另一字符串中第一次出现的位置（不区分大小写）</p><p>strripos() - 查找字符串在另一字符串中最后一次出现的位置（不区分大小写）</p><p>strrpos() - 查找字符串在另一字符串中最后一次出现的位置（区分大小写）</p></blockquote></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>WEB-BUUCTF</title>
      <link href="/2022/09/21/WEB-BUUCTF/"/>
      <url>/2022/09/21/WEB-BUUCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="极客大挑战-2019-EasySQL-1"><a href="#极客大挑战-2019-EasySQL-1" class="headerlink" title="[极客大挑战 2019]EasySQL 1"></a>[极客大挑战 2019]EasySQL 1</h2><p>用户名随意输，密码输入万能密码即可  </p><img src="https://blue-blue-blue-blue.github.io/img/a1.jpg" width ="60%">   <h2 id="HCTF-2018-WarmUp-1"><a href="#HCTF-2018-WarmUp-1" class="headerlink" title="[HCTF 2018]WarmUp 1"></a>[HCTF 2018]WarmUp 1</h2><p>ctrl+u查看源码，看到提示“source.php”   </p><img src="https://blue-blue-blue-blue.github.io/img/a2.jpg" width ="60%">    <p>代码审计，url后加?file&#x3D;source.php%253..&#x2F;(*n)flag  ，最后加了5个..&#x2F;得到flag</p><img src="https://blue-blue-blue-blue.github.io/img/a3.jpg" width ="60%">  <h2 id="Havefun-1"><a href="#Havefun-1" class="headerlink" title="Havefun 1"></a>Havefun 1</h2><p>查看源码，在注释看见提示信息，在url&#x2F;后加?cat&#x3D;dog，即get传参即可得到flag</p><img src="https://blue-blue-blue-blue.github.io/img/a4.jpg" width ="60%">  ]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
